Description: >
    Surya Teja Ganta / DevOps Nanodegree Project 2

Parameters:

    EnvironmentName:
        Description: Environment name will be prefixed to resources
        Type: String

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this
        Type: String
        Default: 10.0.0.0/16
    
    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the subnet
        Type: String
        Default: 10.0.0.0/24
    
    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the subnet
        Type: String
        Default: 10.0.1.0/24
    
    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the subnet
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the subnet
        Type: String
        Default: 10.0.2.0/24
    
    InstanceType:
        Description: "EC2 instance type of general purpose"
        Type: String
        AllowedValues: [t2.medium, t3a.medium, t3.medium]

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties: 
            CidrBlock: String
            EnableDnsHostnames: Boolean
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
          Tags:
              - Key: Name
                Value: !Ref EnvironmentName
    
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties: 
          InternetGatewayId: !Ref InternetGateway
          VpcId: !Ref VPC
          VpnGatewayId: String
    
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties: 
          VpcId: !Ref VPC
          AvailabilityZone: !select [0, !GetAZs '']
          CidrBlock: !Ref PublicSubnet1CIDR
          MapPublicIpOnLaunch: False
          Tags: 
              Key: Name
              Value: !Sub ${EnvironmentName} Public Subnet - AZ1
          
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties: 
          VpcId: !Ref VPC
          AvailabilityZone: !select [1, !GetAZs '']
          CidrBlock: !Ref PublicSubnet2CIDR
          MapPublicIpOnLaunch: False
          Tags: 
              Key: Name
              Value: !Sub ${EnvironmentName} Public Subnet - AZ2

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties: 
          VpcId: !Ref VPC
          AvailabilityZone: !select [0, !GetAZs '']
          CidrBlock: !Ref PrivateSubnet1CIDR
          MapPublicIpOnLaunch: False
          Tags: 
              Key: Name
              Value: !Sub ${EnvironmentName} Private Subnet - AZ1

    PrivateSubnet2:
          Type: AWS::EC2::Subnet
          Properties: 
            VpcId: !Ref VPC
            AvailabilityZone: !select [1, !GetAZs '']
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: False
            Tags: 
                Key: Name
                Value: !Sub ${EnvironmentName} Private Subnet - AZ2

    NatGateway1EIP:
            Type: AWS::EC2::EIP
            DependsOn: InternetGatewayAttachment
            Properties: 
                Domain: vpc
      
    NatGateway2EIP:
            Type: AWS::EC2::EIP
            DependsOn: InternetGatewayAttachment
            Properties: 
                Domain: vpc

    NatGateway1: 
          Type: AWS::EC2::NatGateway
          Properties: 
              AllocationId: !GetAtt NatGateway1EIP.AllocationId
              SubnetId: !Ref PublicSubnet1CIDR

      NatGateway2: 
          Type: AWS::EC2::NatGateway
          Properties:
              AllocationId: !GetAtt NatGateway2EIP.AllocationId
              SubnetId: !Ref PublicSubnet2CIDR
